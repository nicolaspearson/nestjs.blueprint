version: '3.8'

networks:
  development:
    driver: bridge

services:
  #########################
  ##       Service       ##
  #########################

  dellingr:
    image: dellingr:latest
    build:
      args:
        PACKAGE: dellingr
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=3000
      - ENVIRONMENT=production
      - NODE_ENV=production
      - TYPEORM_DATABASE=dellingr
      - TYPEORM_HOST=db
      - TYPEORM_PASSWORD=masterkey
      - TYPEORM_PORT=5432
      - TYPEORM_SCHEMA=public
      - TYPEORM_USERNAME=admin
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - development
    container_name: dellingr

  #########################
  ##     Persistence     ##
  #########################

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=dellingr
      - POSTGRES_PASSWORD=masterkey
      - POSTGRES_USER=admin
    ports:
      - 5432:5432
    networks:
      - development
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./scripts/db:/docker-entrypoint-initdb.d
    container_name: dellingr-db

  db-integration:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=dellingr
      - POSTGRES_PASSWORD=masterkey
      - POSTGRES_USER=admin
    ports:
      - 5433:5432
    networks:
      - development
    volumes:
      - ./scripts/db:/docker-entrypoint-initdb.d
    container_name: dellingr-db-integration

  #########################
  ##     Localstack      ##
  #########################

  localstack:
    image: localstack/localstack:latest
    environment:
      - DEFAULT_REGION=eu-west-1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=s3
    ports:
      - 4566-4599:4566-4599
    volumes:
      - '${TMPDIR:-/tmp}/localstack:/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
