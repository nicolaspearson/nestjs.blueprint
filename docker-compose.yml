version: '3.8'

networks:
  development:
    driver: bridge

services:
  #########################
  ##       Service       ##
  #########################

  dellingr:
    image: dellingr:latest
    build:
      args:
        PACKAGE: dellingr
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - API__HOST=0.0.0.0
      - API__PORT=3000
      - AWS__ACCESS_KEY_ID=test
      - AWS__ENDPOINT=http://localstack:4566
      - AWS__REGION=eu-west-1
      - AWS__SECRET_ACCESS_KEY=test
      - DATABASE__CREDENTIALS__DATABASE=dellingr
      - DATABASE__CREDENTIALS__SCHEMA=public
      - DATABASE__CREDENTIALS__HOST=db
      - DATABASE__CREDENTIALS__PORT=5432
      - DATABASE__CREDENTIALS__PASSWORD=masterkey
      - DATABASE__CREDENTIALS__USERNAME=admin
      - DATABASE__MIGRATIONS_RUN=true
      - ENVIRONMENT=staging
      - NODE_ENV=production
      - SEED_ENVIRONMENT=true
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
      localstack:
        condition: service_healthy
    networks:
      - development
    container_name: dellingr

  #########################
  ##     Persistence     ##
  #########################

  db:
    image: postgres:14-alpine
    environment:
      - PGUSER=admin
      - PGDATABASE=dellingr
      - POSTGRES_DB=dellingr
      - POSTGRES_PASSWORD=masterkey
      - POSTGRES_USER=admin
    ports:
      - 5432:5432
    networks:
      - development
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./scripts/db:/docker-entrypoint-initdb.d
    container_name: dellingr-db

  #########################
  ##     Localstack      ##
  #########################

  localstack:
    image: localstack/localstack:latest
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DATA_DIR=${DATA_DIR-}
      - DEBUG=${DEBUG-}
      - DEFAULT_REGION=eu-west-1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME_EXTERNAL=localstack
      - HOSTNAME=localstack
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - PORT_WEB_UI=8080
      - SERVICES=s3
    ports:
      - 4510-4559:4510-4559 # External service port range
      - 4566:4566 # LocalStack edge proxy
    networks:
      - development
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal s3 ls # && awslocal dynamodb list-tables
      interval: 5s
      timeout: 10s
      start_period: 10s
    volumes:
      - ${TMPDIR:-/tmp}/localstack:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: ${LOCALSTACK_DOCKER_NAME-localstack_main}
